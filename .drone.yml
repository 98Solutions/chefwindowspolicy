kind: pipeline
name: test

steps:
  - name: cookstyle
    image: chef/chefworkstation
    commands:
      - cookstyle .

  - name: rspec
    image: chef/chefworkstation
    environment:
      CHEF_LICENSE: accept
    commands:
      - chef exec rspec . --format documentation

  - name: kitchen verify
    image: chef/chefworkstation
    environment:
      CHEF_LICENSE: accept
    commands:
      - mkdir ~/.ssh
      - mkdir ~/.aws
    when:
      ref:
        - refs/heads/main
        - refs/pull/**

trigger:
  event:
    exclude:
      - promote

# ---
# kind: pipeline
# name: build and upload

# globals:
#   - &drone_vars
#     AZURE_STORAGE_ACCOUNT_NAME:
#       from_secret: AZ_STORAGE_ACCOUNT_NAME
#     AZURE_STORAGE_CONTAINER_NAME:
#       from_secret: AZ_STORAGE_CONTAINER_NAME
#     AZURE_STORAGE_SAS_TOKEN:
#       from_secret: AZ_STORAGE_SAS_TOKEN
#     CHEF_LICENSE: accept

# steps:
#   - name: build artifact
#     image: chef/chefworkstation
#     environment:
#       <<: *drone_vars
#     commands:
#       - chef install
#       - chef export . -a
#       - for filename in *.tgz; do mv "$filename" "${DRONE_BUILD_NUMBER}-$filename"; done;
#       - ls -al

#   - name: upload artifact
#     image: mcr.microsoft.com/azure-cli
#     environment:
#       <<: *drone_vars
#     commands:
#       - ls -al
#       - ARTIFACT_NAME="$(ls | grep *.tgz)"
#       - echo $ARTIFACT_NAME
#       - az storage blob upload --file $ARTIFACT_NAME --name $ARTIFACT_NAME --container-name $AZURE_STORAGE_CONTAINER_NAME --account-name $AZURE_STORAGE_ACCOUNT_NAME --sas-token $AZURE_STORAGE_SAS_TOKEN

# trigger:
#   branch:
#     - main
#   event:
#     - push

# depends_on:
#   - test
---
kind: pipeline
name: deploy

globals:
  - &drone_vars
    AZURE_STORAGE_ACCOUNT_NAME:
      from_secret: AZ_STORAGE_ACCOUNT_NAME
    AZURE_STORAGE_CONTAINER_NAME:
      from_secret: AZ_STORAGE_CONTAINER_NAME
    AZURE_STORAGE_SAS_TOKEN:
      from_secret: AZ_STORAGE_SAS_TOKEN
    CHEF_LICENSE: accept

steps:
  # - name: download artifact
  #   image: mcr.microsoft.com/azure-cli
  #   environment:
  #     <<: *drone_vars
  #   commands:
  #     - ARTIFACT_NAME="$(az storage blob list --container-name $AZURE_STORAGE_CONTAINER_NAME --account-name $AZURE_STORAGE_ACCOUNT_NAME --sas-token $AZURE_STORAGE_SAS_TOKEN --query "[].{name:name}" --output tsv --prefix $DRONE_BUILD_PARENT'-chefwindowspolicy')"
  #     - az storage blob download --name $ARTIFACT_NAME --file /drone/src/$ARTIFACT_NAME --container-name $AZURE_STORAGE_CONTAINER_NAME --account-name $AZURE_STORAGE_ACCOUNT_NAME --sas-token $AZURE_STORAGE_SAS_TOKEN
  #     - ls -al
      
  - name: apply policy
    image: chef/chefworkstation
    environment:
      CHEF_LICENSE: accept
    commands:
      # - ARTIFACT_NAME="$(ls | grep $DRONE_BUILD_PARENT'-chefwindowspolicy')"
      # - echo Deploying Artifact - $ARTIFACT_NAME to $DRONE_DEPLOY_TO
      - if [ $COMP = 'SQL' ]; then echo "Deploying SQL DACPACs to $DRONE_DEPLOY_TO"; elif [ $COMP = 'ADF' ]; then echo "Deploying ADF Pipelines to $DRONE_DEPLOY_TO"; else echo "Deploying both SQL and ADF to $DRONE_DEPLOY_TO"; fi;

trigger:
  branch:
    - main
  event:
    - promote
  target:
    include:
      - acc
      - prod